package Client;

import addon.MyDate;
 /**
 *
 * @author damie
 */
public class ClientInterface extends javax.swing.JFrame {
    static int IDClient;
    static String clientName;
    static ClientBack bc;
    static String address = "127.0.0.1";
    static int port = 1201;
    
    static boolean closeConnexion = false;
    
    public ClientInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayMsg = new javax.swing.JTextArea();
        IDField = new javax.swing.JTextField();
        ConnectButton = new javax.swing.JButton();
        PWField = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        Register = new javax.swing.JButton();
        RegisterName = new javax.swing.JTextField();
        RegisterSurname = new javax.swing.JTextField();
        RegisterMail = new javax.swing.JTextField();
        RegisterPass = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        DisplayMsg.setColumns(20);
        DisplayMsg.setRows(5);
        jScrollPane1.setViewportView(DisplayMsg);
        DisplayMsg.getAccessibleContext().setAccessibleName("");

        IDField.setText("DefaultID\n");

        ConnectButton.setText("Connect");
        ConnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectButtonActionPerformed(evt);
            }
        });

        PWField.setText("jTextField2");

        jTextField2.setText("Login");

        jTextField3.setText("Password");

        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });

        RegisterName.setText("Damien");

        RegisterSurname.setText("Aranda");

        RegisterMail.setText("damien.Aranda42@gmail.com");

        RegisterPass.setText("pass");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sendButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegisterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConnectButton)
                            .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PWField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Register)
                            .addComponent(RegisterPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PWField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConnectButton)
                            .addComponent(RegisterMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RegisterPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendButton)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Register))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //sending fonction
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        String msgText;  
        msgText = (jTextField1.getText()).trim();
        DataMessage msg = new DataMessage(IDClient, clientName, 1, MyDate.now(), msgText);
        bc.sendMsg(msg);
        DisplayMsg.setText(DisplayMsg.getText() + "\n\t" + IDClient + " : " + msgText);
        jTextField1.setText("");
    }//GEN-LAST:event_sendButtonActionPerformed

    //login function
    private void ConnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectButtonActionPerformed
        try {
            bc.setIDClient(IDClient);
            bc.loadMessages(1, MyDate.MIN);
            System.out.println("ID set");
        } catch (Exception e) {}
        
    }//GEN-LAST:event_ConnectButtonActionPerformed

    //registering function
    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        // TODO add your handling code here:
    	String name = RegisterName.getText().trim();
    	String surname = RegisterSurname.getText().trim();
    	String mail = RegisterMail.getText().trim();
    	String pass = RegisterPass.getText().trim();
    	System.out.println("Trying to register");
    	clientName = name + " " + surname;
    	bc.registerRequest(name,surname,mail,pass);
    }//GEN-LAST:event_RegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {  
            @Override
            public void run() {  
            new ClientInterface().setVisible(true);  
            }  
        });  
        try{
            bc = new ClientBack(address, port);
            //bc.send("test");
            while (!closeConnexion) { 
                System.out.println("attente de la reponse");
                String responses = bc.read();
                System.out.println("reception de la reponse");
                InterpretResponse(responses);
            }
        } catch (Exception e) {}
    }
    
    //same as server side
    private static void InterpretResponse(String responses){
    	String[] responsesA = responses.split("\\|");
        for (String response : responsesA) {
			String[] responseA = response.split("@", 2);
			switch (responseA[0]) {
			case "msg":
				System.out.println("interpret as msg");
				DataMessage msg = TranslateToMsg(responseA[1]);
				System.out.println("translate done");
				PrintNewMessage(msg);
				break;

			case "join":
				System.out.println("interpret as join");
				PrintLogin(responseA[1]);
				break;

			case "close":
				closeConnexion = true;
				break;
			
			case "sysregister":
				System.out.println("interpret as system response for registering");
				ResponseRegistering(responseA[1]);
				break;

			default:
			}
		}
    }
    
    //print message in the textbox
    public static void PrintNewMessage(DataMessage msg){
        System.out.println("printing message");
        DisplayMsg.setText(DisplayMsg.getText().trim() + "\n " + msg.ToPrint());
    }
    
    public static void PrintLogin(String id){
        System.out.println("printing login");
        DisplayMsg.setText(DisplayMsg.getText().trim() + "\n " + id + " join.");
    }
    
    public static void Print(String msg){
        System.out.println("printing system message");
        DisplayMsg.setText(DisplayMsg.getText().trim() + "\n " + msg);
    }
    
    public static void ResponseRegistering(String response) {
    	String[] data = response.split("@");
    	switch (data[0]) {
    		case "err" :
    			Print(data[1]);
    			break;
    		
    		case "success" :
    			Print(data[1] + "id = " + data [2]);
    			IDClient = Integer.parseInt(data[2]);
    			break;
    	}
    }
    
    private static DataMessage TranslateToMsg(String responce){
    	System.out.println(responce);
        String[] data = responce.split("@",5);
        MyDate date = new MyDate(data[3]);
        return new DataMessage(Integer.parseInt(data[0]), data[1], Integer.parseInt(data[2]), date, data[4]);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConnectButton;
    private static javax.swing.JTextArea DisplayMsg;
    private javax.swing.JTextField IDField;
    private javax.swing.JTextField PWField;
    private javax.swing.JButton Register;
    private javax.swing.JTextField RegisterMail;
    private javax.swing.JTextField RegisterName;
    private javax.swing.JTextField RegisterPass;
    private javax.swing.JTextField RegisterSurname;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
